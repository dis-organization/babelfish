% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dplyr-Spatial.r
\name{dplyr-Spatial}
\alias{arrange_.Spatial}
\alias{distinct_.Spatial}
\alias{dplyr-Spatial}
\alias{filter_.Spatial}
\alias{mutate_.Spatial}
\alias{rename_.Spatial}
\alias{select_.Spatial}
\alias{slice_.Spatial}
\alias{summarise_.Spatial}
\alias{transmute_.Spatial}
\title{Dplyr verbs for Spatial}
\usage{
\method{mutate_}{Spatial}(.data, ..., .dots)

\method{summarise_}{Spatial}(.data, ...)

\method{transmute_}{Spatial}(.data, ..., .dots)

\method{filter_}{Spatial}(.data, ...)

\method{arrange_}{Spatial}(.data, ...)

\method{slice_}{Spatial}(.data, ...)

\method{select_}{Spatial}(.data, ...)

\method{rename_}{Spatial}(.data, ...)

\method{distinct_}{Spatial}(.data, ...)
}
\arguments{
\item{.data}{A tbl. All main verbs are S3 generics and provide methods
for \code{\link{tbl_df}}, \code{\link{tbl_dt}} and \code{\link{tbl_sql}}.}

\item{...}{Name-value pairs of expressions. Use \code{NULL} to drop
a variable.}

\item{.dots}{Used to work around non-standard evaluation. See
\code{vignette("nse")} for details.}
}
\description{
Direct application of the dplyr verbs to Spatial objects. Not all verbs are supported, see Details.
}
\details{
There is no need for a conversion from and to Spatial with this approach.

mutate, transmute, filter, arrange, slice, select, rename, distinct all work with attributes on the "data" slot and leave the geometry unchanged.

summarise collapses to a single geometry by listing all subgeometries together, it does not perform any topological union or merge. 
This is a pretty brutal collapse of all the data.

summarise for points and multipoints, ... todo single Multipoint for multiple points
}
\note{
Beware that attributes stored on Spatial objects *are not* linked to the geometry. Attributes are often used to store the area or perimeter length or centroid values but these may be completely unmatched to the underlying geometries.
}
\examples{
library(sp)
library(maptools)
data(wrld_simpl)
library(dplyr)
library(spbabel)   ## devtools::install_github("mdsumner/spbabel", ref = "pipe")
library(raster)  
wrld_simpl \%>\% mutate(NAME = "allthesame", REGION = row_number())
wrld_simpl \%>\% transmute(alpha = paste0(FIPS, NAME))
wrld_simpl \%>\% filter(NAME \%in\% c("New Zealand", "Australia", "Fiji"))
wrld_simpl \%>\% arrange(LON)
wrld_simpl \%>\% slice(c(9, 100))
wrld_simpl \%>\% dplyr::select(UN, FIPS)
wrld_simpl \%>\% rename(`TM_WORLD_BORDERS_SIMPL0.2NAME` = NAME)
wrld_simpl \%>\% distinct(REGION) \%>\% arrange(REGION)  ## first alphabetically in REGION
wrld_simpl \%>\% arrange(REGION, desc(NAME)) \%>\% distinct(REGION) ## last

## we don't need to use piping
slice(filter(mutate(wrld_simpl, likepiping = FALSE), abs(LON - 5) < 35 & LAT > 50), 4)


## works with Lines
#as(wrld_simpl, "SpatialLinesDataFrame") \%>\% mutate(perim = rgeos::gLength(wrld_simpl, byid = TRUE))


## summarise/ze is different, we have to return only one geometry
wrld_simpl \%>\% summarize(max(AREA))
}

